"Avg. methylation (%):")
t1_data <- data.frame(Parameter = t1_params,
Value = c(case$array_basename,
case$array_platform,
imp,
avg_beta))
# create grob
t1 <- tableGrob(t1_data,
theme = t1_theme,
cols = NULL,
rows = NULL)
# Table 2: Classification Results -----
# set theme
t2_theme <- ttheme_minimal(core = list(bg_params = list(fill = "white", col = NA),
fg_params = list(fontsize = 8, hjust = 0, x = 0.01)))
# enter data
t2_params <-  c("Methylation Class:",
"Class Score:",
"Tumor Purity ABSOLUTE (%):",
"Tumor Purity ESTIMATE (%):")
t2_data <- data.frame(Parameter = t2_params,
Value = c(class,
score,
p_absolute,
p_estimate))
# create grob
t2 <- tableGrob(t2_data,
theme = t2_theme,
cols = NULL,
rows = NULL)
# Plot: Tumor purity barplot -----
plot_purity <- case$purity %>%
ggplot2::ggplot(aes(x = method, y = purity, fill = method)) +
ggplot2::geom_bar(stat = "identity", colour = "black") +
ggplot2::lims(y = c(0, 100)) +
ggplot2::labs(x = NULL, y = "Tumor purity (estimated)") +
ggplot2::theme(legend.position = "none")
# Add section headers -----
header_sample <- grid::textGrob(label = "Sample Information",
hjust = 0, vjust = 0, x = 0, y = 0,
gp = gpar(fontsize = 15, col="grey"))
header_class <- grid::textGrob(label = "Classification Results",
hjust = 0, vjust = 0, x = 0, y = 0,
gp = gpar(fontsize = 15, col="grey"))
# Arrange elements into plot -----
grid_layout <- rbind(c(1, 1, 1, 1, 1, 1),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(4, 4, 4, 4, 3, 3),
c(5, 5, 5, 5, 3, 3),
c(5, 5, 5, 5, 3, 3))
gridExtra::grid.arrange(
grobs = list(header_sample,
t1,
plot_purity,
header_class,
t2),
layout_matrix = grid_layout)
?tableGrob
?ttheme_default
?ttheme_default
?gtable
case$class_votes_calibrated
case$class_votes_calibrated %>% ggtern(aes(IlealNET, PanNET, PulmNET)) + geom_point()
case$class_votes_calibrated %>%
mutate(Pancreas = PanNET) %>%
ggtern(aes(IlealNET, Pancreas, PulmNET)) + geom_point()
case$class_votes_calibrated %>%
mutate(Pan = PanNET, Pulm = PulmNET, Ileal = IlealNET) %>%
ggtern(aes(Ileal, Pan, Pulm)) + geom_point()
case$class_votes_calibrated %>%
ggtern(aes(Ileal, Pan, Pulm)) + geom_point()
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + geom_point()
```{r,echo = FALSE, fig.align='center', fig.asp=0.8}
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + geom_point()
```{r,echo = FALSE, fig.align='center', fig.width='80%}
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + geom_point()
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + geom_point()
?ggtern
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + theme_rgbw + geom_point()
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + theme_rgbw() + geom_point()
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + theme_rgbw() + geom_point(size = 12)
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + theme_rgbw() + geom_point(size = 10)
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + theme_rgbw() + geom_point(size = 8)
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + theme_rgbw() + geom_point(size = 6)
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + theme_rgbw(alpha = 0.4) + geom_point(size = 6)
?theme_rgbw
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + theme_rgb() + geom_point(size = 6)
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + theme_tern_rgbw() + geom_point(size = 6)
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + theme_rgbw() + geom_point(size = 6)
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + theme_rgbw() + theme_nogrid_minor() + geom_point(size = 6)
case$class_votes_calibrated %>%
ggtern(aes(IlealNET, PanNET, PulmNET)) + theme_rgbw(base_size = 10) + theme_nogrid_minor() + geom_point(size = 6)
# Calculate additional variables ----
avg_beta <- round(mean(case$data_beta) * 100, digits = 2)
imp <- (case$data_na_n / nrow(case$data_beta) * 100)
imp <- ifelse(imp < 0.01, "< 0.01", imp)
class <- case$class_type_calibrated
score <- round(case$class_votes_calibrated[, class] * 100, digits = 2) %>% unlist %>% unname
p_absolute <- case$purity$purity[1] %>% unname
p_estimate <- case$purity$purity[2] %>% unname
# Table 1: Sample Data ----
# create theme
t1_theme <- ttheme_minimal(core = list(bg_params = list(fill = "white", col = NA),
fg_params = list(fontsize = 8, hjust = 0, x = 0.01)))
# enter data
t1_params <- c("Sentrix ID:",
"Platform:",
"Imputed data points (%):",
"Avg. methylation (%):")
t1_data <- data.frame(Parameter = t1_params,
Value = c(case$array_basename,
case$array_platform,
imp,
avg_beta))
# create grob
t1 <- tableGrob(t1_data,
theme = t1_theme,
cols = NULL,
rows = NULL)
# Table 2: Classification Results -----
# set theme
t2_theme <- ttheme_minimal(core = list(bg_params = list(fill = "white", col = NA),
fg_params = list(fontsize = 8, hjust = 0, x = 0.01)))
# enter data
t2_params <-  c("Methylation Class:",
"Class Score:",
"Tumor Purity ABSOLUTE (%):",
"Tumor Purity ESTIMATE (%):")
t2_data <- data.frame(Parameter = t2_params,
Value = c(class,
score,
p_absolute,
p_estimate))
# create grob
t2 <- tableGrob(t2_data,
theme = t2_theme,
cols = NULL,
rows = NULL)
# Plot: Tumor purity barplot -----
plot_purity <- case$purity %>%
ggplot2::ggplot(aes(x = method, y = purity, fill = method)) +
ggplot2::geom_bar(stat = "identity", colour = "black") +
ggplot2::lims(y = c(0, 100)) +
ggplot2::labs(x = NULL, y = "Tumor purity (estimated)") +
ggplot2::theme(legend.position = "none")
# Add section headers -----
header_sample <- grid::textGrob(label = "Sample Information",
hjust = 0, vjust = 0, x = 0, y = 0,
gp = gpar(fontsize = 15, col="grey"))
header_class <- grid::textGrob(label = "Classification Results",
hjust = 0, vjust = 0, x = 0, y = 0,
gp = gpar(fontsize = 15, col="grey"))
# Arrange elements into plot -----
grid_layout <- rbind(c(1, 1, 1, 1, 1, 1),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(4, 4, 4, 4, 3, 3),
c(5, 5, 5, 5, 3, 3),
c(5, 5, 5, 5, 3, 3))
gridExtra::grid.arrange(
grobs = list(header_sample,
t1,
plot_purity,
header_class,
t2),
layout_matrix = grid_layout)
grid_layout <- rbind(c(1, 1, 1, 1, 1, 1),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3))
gridExtra::grid.arrange(
grobs = list(header_sample,
t1),
layout_matrix = grid_layout)
# Calculate additional variables ----
avg_beta <- round(mean(case$data_beta) * 100, digits = 2)
imp <- (case$data_na_n / nrow(case$data_beta) * 100)
imp <- ifelse(imp < 0.01, "< 0.01", imp)
class <- case$class_type_calibrated
score <- round(case$class_votes_calibrated[, class] * 100, digits = 2) %>% unlist %>% unname
p_absolute <- case$purity$purity[1] %>% unname
p_estimate <- case$purity$purity[2] %>% unname
# Table 1: Sample Data ----
# create theme
t1_theme <- ttheme_minimal(core = list(bg_params = list(fill = "white", col = NA),
fg_params = list(fontsize = 8, hjust = 0, x = 0.01)))
# enter data
t1_params <- c("Sentrix ID:",
"Platform:",
"Imputed data points (%):",
"Avg. methylation (%):")
t1_data <- data.frame(Parameter = t1_params,
Value = c(case$array_basename,
case$array_platform,
imp,
avg_beta))
# create grob
t1 <- tableGrob(t1_data,
theme = t1_theme,
cols = NULL,
rows = NULL)
# Table 2: Classification Results -----
# set theme
t2_theme <- ttheme_minimal(core = list(bg_params = list(fill = "white", col = NA),
fg_params = list(fontsize = 8, hjust = 0, x = 0.01)))
# enter data
t2_params <-  c("Methylation Class:",
"Class Score:",
"Tumor Purity ABSOLUTE (%):",
"Tumor Purity ESTIMATE (%):")
t2_data <- data.frame(Parameter = t2_params,
Value = c(class,
score,
p_absolute,
p_estimate))
# create grob
t2 <- tableGrob(t2_data,
theme = t2_theme,
cols = NULL,
rows = NULL)
# Plot: Tumor purity barplot -----
plot_purity <- case$purity %>%
ggplot2::ggplot(aes(x = method, y = purity, fill = method)) +
ggplot2::geom_bar(stat = "identity", colour = "black") +
ggplot2::lims(y = c(0, 100)) +
ggplot2::labs(x = NULL, y = "Tumor purity (estimated)") +
ggplot2::theme(legend.position = "none")
# Add section headers -----
header_sample <- grid::textGrob(label = "Sample Information & Classification Results",
hjust = 0, vjust = 0, x = 0, y = 0,
gp = gpar(fontsize = 15, col="grey"))
# Arrange elements into plot -----
grid_layout <- rbind(c(1, 1, 1, 1, 1, 1),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3))
gridExtra::grid.arrange(
grobs = list(header_sample,
t1),
layout_matrix = grid_layout)
# Calculate additional variables ----
avg_beta <- round(mean(case$data_beta) * 100, digits = 2)
imp <- (case$data_na_n / nrow(case$data_beta) * 100)
imp <- ifelse(imp < 0.01, "< 0.01", imp)
class <- case$class_type_calibrated
score <- round(case$class_votes_calibrated[, class] * 100, digits = 2) %>% unlist %>% unname
p_absolute <- case$purity$purity[1] %>% unname
p_estimate <- case$purity$purity[2] %>% unname
# Table 1: Sample Data ----
# create theme
t1_theme <- ttheme_minimal(core = list(bg_params = list(fill = "white", col = NA),
fg_params = list(fontsize = 8, hjust = 0, x = 0.01)))
# enter data
t1_params <- c("Sentrix ID:",
"Platform:",
"Imputed data points (%):",
"Avg. methylation (%):")
t1_data <- data.frame(Parameter = t1_params,
Value = c(case$array_basename,
case$array_platform,
imp,
avg_beta))
# create grob
t1 <- tableGrob(t1_data,
theme = t1_theme,
cols = NULL,
rows = NULL)
# Table 2: Classification Results -----
# set theme
t2_theme <- ttheme_minimal(core = list(bg_params = list(fill = "white", col = NA),
fg_params = list(fontsize = 8, hjust = 0, x = 0.01)))
# enter data
t2_params <-  c("Methylation Class:",
"Class Score:",
"Tumor Purity ABSOLUTE (%):",
"Tumor Purity ESTIMATE (%):")
t2_data <- data.frame(Parameter = t2_params,
Value = c(class,
score,
p_absolute,
p_estimate))
# create grob
t2 <- tableGrob(t2_data,
theme = t2_theme,
cols = NULL,
rows = NULL)
# Plot: Tumor purity barplot -----
plot_purity <- case$purity %>%
ggplot2::ggplot(aes(x = method, y = purity, fill = method)) +
ggplot2::geom_bar(stat = "identity", colour = "black") +
ggplot2::lims(y = c(0, 100)) +
ggplot2::labs(x = NULL, y = "Tumor purity (estimated)") +
ggplot2::theme(legend.position = "none")
# Add section headers -----
header_sample <- grid::textGrob(label = "Sample Information & Classification Results",
hjust = 0, vjust = 0, x = 0, y = 0,
gp = gpar(fontsize = 15, col="grey"))
# Arrange elements into plot -----
grid_layout <- rbind(c(1, 1, 1, 1, 1, 1),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3))
gridExtra::grid.arrange(
grobs = list(header_sample,
t1,
plot_purity),
layout_matrix = grid_layout)
ttheme_minimal
# enter data
t1_params <- c("Sentrix ID:", "Platform:", "Imputed data points (%):", "Avg. methylation (%):", "",
"Methylation Class:", "Class Score:", "Tumor Purity ABSOLUTE (%):", "Tumor Purity ESTIMATE (%):")
t1_values <- c(case$array_basename, case$array_platform, imp, avg_beta,
class, score, p_absolute, p_estimate))
t1_data <- data.frame(Parameter = t1_params,
Value = t1_values)
t1_values <- c(case$array_basename, case$array_platform, imp, avg_beta,
class, score, p_absolute, p_estimate)
t1_data <- data.frame(Parameter = t1_params,
Value = t1_values)
t1_data <- data.frame(Parameter = t1_params,
Values = t1_values)
t1_values <- c(case$array_basename, case$array_platform, imp, avg_beta, "",
class, score, p_absolute, p_estimate)
t1_data <- data.frame(Parameter = t1_params,
Values = t1_values)
# create grob
t1 <- tableGrob(t1_data,
theme = t1_theme,
cols = NULL,
rows = NULL)
header_sample <- grid::textGrob(label = "Sample Information & Classification Results",
hjust = 0, vjust = 0, x = 0, y = 0,
gp = gpar(fontsize = 15, col="grey"))
grid_layout <- rbind(c(1, 1, 1, 1, 1, 1),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3))
gridExtra::grid.arrange(
grobs = list(header_sample,
t1,
plot_purity),
layout_matrix = grid_layout)
grid_layout <- rbind(c(1, 1, 1, 1, 1),
c(2, 2, 2, 3, 3),
c(2, 2, 2, 3, 3),
c(2, 2, 2, 3, 3),
c(2, 2, 2, 3, 3),
c(2, 2, 2, 3, 3))
gridExtra::grid.arrange(
grobs = list(header_sample,
t1,
plot_purity),
layout_matrix = grid_layout)
# Calculate additional variables ----
avg_beta <- round(mean(case$data_beta) * 100, digits = 2)
imp <- (case$data_na_n / nrow(case$data_beta) * 100)
imp <- ifelse(imp < 0.01, "< 0.01", imp)
class <- case$class_type_calibrated
score <- round(case$class_votes_calibrated[, class] * 100, digits = 2) %>% unlist %>% unname
p_absolute <- case$purity$purity[1] %>% unname
p_estimate <- case$purity$purity[2] %>% unname
# Table 1: Sample Data ----
# create theme
t1_theme <- ttheme_minimal(core = list(bg_params = list(fill = "white", col = NA),
fg_params = list(fontsize = 10, hjust = 0, x = 0.01)))
# enter data
t1_params <- c("Sentrix ID:", "Platform:", "Imputed data points (%):", "Avg. methylation (%):", "",
"Methylation Class:", "Class Score:", "Tumor Purity ABSOLUTE (%):", "Tumor Purity ESTIMATE (%):")
t1_values <- c(case$array_basename, case$array_platform, imp, avg_beta, "",
class, score, p_absolute, p_estimate)
t1_data <- data.frame(Parameter = t1_params,
Values = t1_values)
# create grob
t1 <- tableGrob(t1_data,
theme = t1_theme,
cols = NULL,
rows = NULL)
# Plot: Tumor purity barplot -----
plot_purity <- case$purity %>%
ggplot2::ggplot(aes(x = method, y = purity, fill = method)) +
ggplot2::geom_bar(stat = "identity", colour = "black") +
ggplot2::lims(y = c(0, 100)) +
ggplot2::labs(x = NULL, y = "Tumor purity (estimated)") +
ggplot2::theme(legend.position = "none")
# Add section headers -----
header_sample <- grid::textGrob(label = "Sample Information & Classification Results",
hjust = 0, vjust = 0, x = 0, y = 0,
gp = gpar(fontsize = 15, col="grey"))
# Arrange elements into plot -----
grid_layout <- rbind(c(1, 1, 1, 1, 1),
c(2, 2, 2, 3, 3),
c(2, 2, 2, 3, 3),
c(2, 2, 2, 3, 3),
c(2, 2, 2, 3, 3),
c(2, 2, 2, 3, 3))
gridExtra::grid.arrange(
grobs = list(header_sample,
t1,
plot_purity),
layout_matrix = grid_layout)
# Calculate additional variables ----
avg_beta <- round(mean(case$data_beta) * 100, digits = 2)
imp <- (case$data_na_n / nrow(case$data_beta) * 100)
imp <- ifelse(imp < 0.01, "< 0.01", imp)
class <- case$class_type_calibrated
score <- round(case$class_votes_calibrated[, class] * 100, digits = 2) %>% unlist %>% unname
p_absolute <- case$purity$purity[1] %>% unname
p_estimate <- case$purity$purity[2] %>% unname
# Table 1: Sample Data ----
# create theme
t1_theme <- ttheme_minimal(core = list(bg_params = list(fill = "white", col = NA),
fg_params = list(fontsize = 10, hjust = 0, x = 0.01)))
# enter data
t1_params <- c("Sentrix ID:", "Platform:", "Imputed data points (%):", "Avg. methylation (%):", "",
"Methylation Class:", "Class Score:", "Tumor Purity ABSOLUTE (%):", "Tumor Purity ESTIMATE (%):")
t1_values <- c(case$array_basename, case$array_platform, imp, avg_beta, "",
class, score, p_absolute, p_estimate)
t1_data <- data.frame(Parameter = t1_params,
Values = t1_values)
# create grob
t1 <- tableGrob(t1_data,
theme = t1_theme,
cols = NULL,
rows = NULL)
# Plot: Tumor purity barplot -----
plot_purity <- case$purity %>%
ggplot2::ggplot(aes(x = method, y = purity, fill = method)) +
ggplot2::geom_bar(stat = "identity", colour = "black") +
ggplot2::lims(y = c(0, 100)) +
ggplot2::labs(x = NULL, y = "Tumor purity (estimated)") +
ggplot2::theme(legend.position = "none")
# Add section headers -----
header_sample <- grid::textGrob(label = "Sample Information & Classification Results",
hjust = 0, vjust = 0, x = 0, y = 0,
gp = gpar(fontsize = 15, col="grey"))
# Arrange elements into plot -----
grid_layout <- rbind(c(1, 1, 1, 1, 1, 1),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3))
gridExtra::grid.arrange(
grobs = list(header_sample,
t1,
plot_purity),
layout_matrix = grid_layout)
grid_layout <- rbind(c(1, 1, 1, 1, 1, 1),
c(1, 1, 1, 1, 1, 1),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3),
c(2, 2, 2, 2, 3, 3))
gridExtra::grid.arrange(
grobs = list(header_sample,
t1,
plot_purity),
layout_matrix = grid_layout)
knitr::opts_chunk$set(echo = TRUE)
library(gridExtra)
library(grid)
library(conumee)
library(tidyverse)
library(ggtern)
case = readRDS("../test_case_incl_calibration.rds")
grid_layout <- rbind(c(1, 1, 1, 1, 2, 2),
c(1, 1, 1, 1, 2, 2),
c(1, 1, 1, 1, 2, 2),
c(1, 1, 1, 1, 2, 2))
gridExtra::grid.arrange(
grobs = list(header_sample,
t1,
plot_purity),
layout_matrix = grid_layout)
gridExtra::grid.arrange(
grobs = list(t1,
plot_purity),
layout_matrix = grid_layout)
# Calculate additional variables ----
avg_beta <- round(mean(case$data_beta) * 100, digits = 2)
knitr::opts_chunk$set(echo = TRUE)
library(gridExtra)
library(grid)
library(conumee)
library(tidyverse)
library(ggtern)
case = readRDS("../test_case_incl_calibration.rds")
